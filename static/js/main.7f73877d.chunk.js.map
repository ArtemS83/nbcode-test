{"version":3,"sources":["components/Button/Button.module.scss","components/Container/Container.module.scss","components/AddEventForm/AddEventForm.module.scss","components/Container/Container.jsx","components/Button/Button.jsx","redux/events/event-actions.js","components/AddEventForm/AddEventForm.jsx","App.js","redux/events/event-reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","styles","Button","title","type","onClick","buttonButton","button","defaultProps","addEvent","createAction","AddEventForm","useState","firstName","setFirstName","lastName","setLastName","email","setEmail","date","setDate","dispatch","useDispatch","handleInputChange","target","value","name","resetForm","Form","onSubmit","e","preventDefault","newEvent","id","uuid","alert","label","pattern","required","placeholder","onChange","divBtn","App","createReducer","state","action","payload","store","configureStore","reducer","items","eventReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7f73877d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__Dmn2g\",\"buttonButton\":\"Button_buttonButton__3HHcA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3NVDd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"AddEventForm_Form__3zaO4\",\"label\":\"AddEventForm_label__1g61r\",\"divBtn\":\"AddEventForm_divBtn__2oJBf\"};","import styles from './Container.module.scss';\nimport PropTypes from 'prop-types';\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport styles from './Button.module.scss';\n\nconst Button = ({ title, type, onClick }) => {\n  return (\n    <button\n      data-testid=\"onClickFn\"\n      className={type === 'button' ? styles.buttonButton : styles.button}\n      type={type}\n      onClick={onClick}\n    >\n      {title}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  title: 'Click me',\n  type: 'button',\n  onClick: () => {},\n};\n\nButton.propTypes = {\n  title: PropTypes.string,\n  type: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const addEvent = createAction('event/addEvent');\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { v4 as uuid } from 'uuid';\nimport styles from './AddEventForm.module.scss';\nimport Button from '../Button';\nimport { addEvent } from 'redux/events/event-actions';\n\nconst AddEventForm = () => {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [date, setDate] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleInputChange = ({ target }) => {\n    const { value, name } = target;\n    switch (name) {\n      case 'firstName':\n        setFirstName(value);\n        return;\n      case 'lastName':\n        setLastName(value);\n        return;\n      case 'email':\n        setEmail(value);\n        return;\n      case 'date':\n        setDate(value);\n        return;\n\n      default:\n        return;\n    }\n  };\n\n  const resetForm = () => {\n    setFirstName('');\n    setLastName('');\n    setEmail('');\n    setDate('');\n  };\n\n  const handleAddEvent = e => {\n    e.preventDefault();\n    if (!firstName || !lastName || !email || !date) {\n      alert(`Please fill in all fields! `);\n      return;\n    }\n    const newEvent = {\n      id: uuid(),\n      firstName,\n      lastName,\n      email,\n      date,\n    };\n    dispatch(addEvent(newEvent));\n    resetForm();\n  };\n\n  return (\n    <form className={styles.Form} onSubmit={handleAddEvent}>\n      <label className={styles.label}>\n        First name\n        <input\n          type=\"text\"\n          name=\"firstName\"\n          value={firstName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"The name can only consist of letters, apostrophes, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan, etc.\"\n          required\n          placeholder=\"Enter First name \"\n          onChange={handleInputChange}\n        />\n      </label>\n      <label className={styles.label}>\n        Last name\n        <input\n          type=\"text\"\n          name=\"lastName\"\n          value={lastName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"The name can only consist of letters, apostrophes, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan, etc.\"\n          required\n          placeholder=\"Enter Last name\"\n          onChange={handleInputChange}\n        />\n      </label>\n      <label className={styles.label}>\n        Email\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          pattern=\"^[\\w]{1,}[\\w.+-]{0,}@[\\w-]{2,}([.][a-zA-Z]{2,}|[.][\\w-]{2,}[.][a-zA-Z]{2,})$\"\n          title=\"Enter Email\"\n          required\n          placeholder=\"Enter Email\"\n          onChange={handleInputChange}\n        />\n      </label>\n      <label className={styles.label}>\n        Event date\n        <input\n          type=\"date\"\n          name=\"date\"\n          value={date}\n          pattern=\"\\d{4}-\\d{2}-\\d{2}\"\n          title=\"Enter Event date\"\n          required\n          placeholder=\"Enter Event date\"\n          onChange={handleInputChange}\n        />\n      </label>\n      <div className={styles.divBtn}>\n        <Button title=\"Reset form\" onClick={resetForm} />\n        <Button title=\"Add Event\" type=\"submit\" />\n      </div>\n    </form>\n  );\n};\n\nexport default AddEventForm;\n","import Container from 'components/Container';\nimport AddEventForm from 'components/AddEventForm';\n\nconst App = () => {\n  return (\n    <Container>\n      <AddEventForm />\n    </Container>\n  );\n};\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { addEvent } from './event-actions';\n\nconst initialState = [];\n\nexport default createReducer(initialState, {\n  [addEvent]: (state, action) => [...state, action.payload],\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport eventReducer from './events/event-reducer';\n\nconst store = configureStore({\n  reducer: {\n    items: eventReducer,\n  },\n  // devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}