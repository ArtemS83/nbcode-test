{"version":3,"sources":["components/Button/Button.module.scss","components/EventsList/EventsList.module.scss","components/Container/Container.module.scss","components/AddEventForm/AddEventForm.module.scss","components/Container/Container.jsx","components/Button/Button.jsx","redux/events/event-actions.js","components/AddEventForm/AddEventForm.jsx","redux/events/event-selectors.js","components/EventItem/EventItem.jsx","components/EventsList/EventsList.jsx","App.js","redux/events/event-reducer.js","redux/store.js","index.js","components/EventItem/EventItem.module.scss"],"names":["module","exports","Container","children","className","styles","Button","title","type","onClick","disabled","buttonButton","button","defaultProps","addEvent","createAction","initialState","firstName","lastName","date","Date","toISOString","substring","email","AddEventForm","useState","formState","setFormState","isDisabled","setIsDisabled","dispatch","useDispatch","handleInputChange","e","target","name","value","useEffect","trim","resetForm","Form","onSubmit","preventDefault","newEvent","id","uuid","label","pattern","required","placeholder","onChange","divBtn","getEvents","state","items","EventItem","item","EventsList","events","useSelector","length","list","map","eventItem","text","App","createReducer","action","payload","store","configureStore","reducer","eventReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e016a4b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__Dmn2g\",\"buttonButton\":\"Button_buttonButton__3HHcA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"EventsList_list__3YBbN\",\"text\":\"EventsList_text__XzkVo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3NVDd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"AddEventForm_Form__3zaO4\",\"label\":\"AddEventForm_label__1g61r\",\"divBtn\":\"AddEventForm_divBtn__2oJBf\"};","import styles from './Container.module.scss';\nimport PropTypes from 'prop-types';\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport styles from './Button.module.scss';\n\nconst Button = ({ title, type, onClick, disabled }) => {\n  return (\n    <button\n      data-testid=\"onClickFn\"\n      className={type === 'button' ? styles.buttonButton : styles.button}\n      type={type}\n      onClick={onClick}\n      disabled={disabled}\n    >\n      {title}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  title: 'Click me',\n  type: 'button',\n  onClick: () => {},\n  disabled: false,\n};\n\nButton.propTypes = {\n  title: PropTypes.string,\n  type: PropTypes.string,\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n};\n\nexport default Button;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const addEvent = createAction('event/addEvent');\n","import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { v4 as uuid } from 'uuid';\nimport styles from './AddEventForm.module.scss';\nimport Button from '../Button';\nimport { addEvent } from 'redux/events/event-actions';\n\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  date: new Date().toISOString().substring(0, 10),\n  email: '',\n};\n\nconst AddEventForm = () => {\n  const [formState, setFormState] = useState(initialState);\n  const [isDisabled, setIsDisabled] = useState(true);\n\n  const dispatch = useDispatch();\n\n  const { firstName, lastName, date, email } = formState;\n\n  const handleInputChange = e =>\n    setFormState({ ...formState, [e.target.name]: e.target.value });\n\n  useEffect(() => {\n    if (firstName.trim() && lastName.trim() && email.trim() && date) {\n      setIsDisabled(false);\n      return;\n    }\n    setIsDisabled(true);\n  }, [firstName, lastName, email, date]);\n\n  const resetForm = () => {\n    setFormState(initialState);\n    setIsDisabled(true);\n  };\n\n  const handleAddEvent = e => {\n    e.preventDefault();\n\n    const newEvent = {\n      id: uuid(),\n      firstName,\n      lastName,\n      email,\n      date,\n    };\n    dispatch(addEvent(newEvent));\n    resetForm();\n  };\n  return (\n    <form className={styles.Form} onSubmit={handleAddEvent}>\n      <label className={styles.label}>\n        First name\n        <input\n          type=\"text\"\n          name=\"firstName\"\n          value={firstName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"The name can only consist of letters, apostrophes, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan, etc.\"\n          required\n          placeholder=\"Enter First name \"\n          onChange={handleInputChange}\n        />\n      </label>\n      <label className={styles.label}>\n        Last name\n        <input\n          type=\"text\"\n          name=\"lastName\"\n          value={lastName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"The name can only consist of letters, apostrophes, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan, etc.\"\n          required\n          placeholder=\"Enter Last name\"\n          onChange={handleInputChange}\n        />\n      </label>\n      <label className={styles.label}>\n        Email\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          pattern=\"^[\\w]{1,}[\\w.+-]{0,}@[\\w-]{2,}([.][a-zA-Z]{2,}|[.][\\w-]{2,}[.][a-zA-Z]{2,})$\"\n          title=\"Enter Email\"\n          required\n          placeholder=\"Enter Email\"\n          onChange={handleInputChange}\n        />\n      </label>\n      <label className={styles.label}>\n        Event date\n        <input\n          type=\"date\"\n          name=\"date\"\n          value={date}\n          pattern=\"\\d{4}-\\d{2}-\\d{2}\"\n          title=\"Enter Event date\"\n          required\n          placeholder=\"Enter Event date\"\n          onChange={handleInputChange}\n        />\n      </label>\n      <div className={styles.divBtn}>\n        <Button title=\"Reset form\" onClick={resetForm} />\n        <Button title=\"Add Event\" type=\"submit\" disabled={isDisabled} />\n      </div>\n    </form>\n  );\n};\n\nexport default AddEventForm;\n","export const getEvents = state => state.items;\n","import PropTypes from 'prop-types';\nimport styles from './EventItem.module.scss';\n\nconst EventItem = ({ item }) => {\n  const { firstName, lastName, email, date } = item;\n  return (\n    <>\n      <li className={styles.item}>\n        <p className={styles.name}>\n          {firstName} {lastName}\n        </p>\n        <p className={styles.email}>{email}</p>\n        <p className={styles.date}>{date}</p>\n      </li>\n    </>\n  );\n};\n\nEventItem.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    firstName: PropTypes.string.isRequired,\n    lastName: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default EventItem;\n","import { useSelector } from 'react-redux';\nimport { getEvents } from '../../redux/events/event-selectors';\nimport EventItem from '../EventItem';\nimport styles from './EventsList.module.scss';\n\nconst EventsList = () => {\n  const events = useSelector(getEvents);\n\n  return (\n    <>\n      {events.length > 0 ? (\n        <ul className={styles.list}>\n          {events.map(eventItem => (\n            <EventItem key={eventItem.id} item={eventItem} />\n          ))}\n        </ul>\n      ) : (\n        <p className={styles.text}>No Enents</p>\n      )}\n    </>\n  );\n};\n\nexport default EventsList;\n","import Container from 'components/Container';\nimport AddEventForm from 'components/AddEventForm';\nimport EventsList from 'components/EventsList';\n\nconst App = () => {\n  return (\n    <Container>\n      <AddEventForm />\n      <EventsList />\n    </Container>\n  );\n};\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { addEvent } from './event-actions';\n\nconst initialState = [];\n\nexport default createReducer(initialState, {\n  [addEvent]: (state, action) => [...state, action.payload],\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport eventReducer from './events/event-reducer';\n\nconst store = configureStore({\n  reducer: {\n    items: eventReducer,\n  },\n  // devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"EventItem_item__3s-2P\"};"],"sourceRoot":""}